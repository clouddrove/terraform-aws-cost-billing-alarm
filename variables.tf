#Module      : LABEL
#Description : Terraform label module variables.
variable "name" {
  type        = string
  default     = "aws/billing"
  description = "Name  (e.g. `app` or `cluster`)."
}

variable "name_prefix" {
  type        = string
  default     = ""
  description = "Name  (e.g. `app` or `cluster`)."
}

variable "enabled" {
  type        = bool
  description = "Set to false to prevent the module from creating any resources."
  default     = true
}

variable "repository" {
  type        = string
  default     = "https://github.com/clouddrove/terraform-aws-cost-billing-alarm/tree/aws-cost-billing-alarm"
  description = "Terraform current module repo"

  validation {
    # regex(...) fails if it cannot find a match
    condition     = can(regex("^https://", var.repository))
    error_message = "The module-repo value must be a valid Git repo link."
  }
}

variable "environment" {
  type        = string
  description = "Environment (e.g. `prod`, `dev`, `staging`)."
}

variable "label_order" {
  type        = list(any)
  default     = []
  description = "Label order, e.g. `name`,`application`."
}

variable "attributes" {
  type        = list(any)
  default     = []
  description = "Additional attributes (e.g. `1`)."
}

variable "delimiter" {
  type        = string
  default     = "-"
  description = "Delimiter to be used between `organization`, `environment`, `name` and `attributes`."
}

variable "tags" {
  type        = map(any)
  default     = {}
  description = "Additional tags (e.g. map(`BusinessUnit`,`XYZ`)."
}

variable "managedby" {
  type        = string
  default     = "hello@clouddrove.com"
  description = "ManagedBy, eg 'CloudDrove'."
}

#Module      :Cloudwatch Billing Alarm
#Description : Terraform Cloudwatch Billing Alarm module variables.

variable "monthly_billing_threshold" {
  description = "The threshold for which estimated monthly charges will trigger the metric alarm."
  type        = string
}

variable "currency" {
  description = "Short notation for currency type (e.g. USD, CAD, EUR)"
  type        = string
  default     = "USD"
}

variable "aws_account_id" {
  description = "AWS account id"
  type        = string
  default     = null
}

#Module      : SNS TOPIC
#Description : Terraform SNS TOPIC module variables.

variable "topic_name" {
  type        = string
  default     = ""
  description = "The friendly name for the SNS topic. By default generated by Terraform."
}

variable "enable_topic" {
  type        = bool
  default     = false
  description = "Boolean indicating whether or not to create topic."
}

variable "enable_sns" {
  type        = bool
  default     = false
  description = "Boolean indicating whether or not to create sns."
}


variable "display_name" {
  type        = string
  default     = ""
  description = "The display name for the SNS topic."
}

variable "policy" {
  type        = string
  default     = ""
  description = "The fully-formed AWS policy as JSON. For more information about building AWS IAM policy documents with Terraform."
}

variable "delivery_policy" {
  type        = string
  default     = null
  description = "The SNS delivery policy."
}

variable "sns_topic_arns" {
  description = "List of SNS topic ARNs to be used. If `create_sns_topic` is `true`, it merges the created SNS Topic by this module with this list of ARNs"
  type        = list(string)
  default     = []
}

variable "application_success_feedback_role_arn" {
  type        = string
  default     = ""
  description = "The IAM role permitted to receive success feedback for this topic."
}

variable "application_success_feedback_sample_rate" {
  type        = number
  default     = 100
  description = "Percentage of success to sample."
}

variable "application_failure_feedback_role_arn" {
  type        = string
  default     = ""
  description = "IAM role for failure feedback."
}

variable "http_success_feedback_role_arn" {
  type        = string
  default     = ""
  description = "The IAM role permitted to receive success feedback for this topic."
  sensitive   = true
}

variable "http_success_feedback_sample_rate" {
  type        = number
  default     = 100
  description = "Percentage of success to sample."
}

variable "http_failure_feedback_role_arn" {
  type        = string
  default     = ""
  description = "IAM role for failure feedback."
}

variable "kms_master_key_id" {
  type        = string
  default     = ""
  description = "The ID of an AWS-managed customer master key (CMK) for Amazon SNS or a custom CMK. For more information."
}

variable "lambda_success_feedback_role_arn" {
  type        = string
  default     = ""
  description = "The IAM role permitted to receive success feedback for this topic."
}

variable "lambda_success_feedback_sample_rate" {
  type        = number
  default     = 100
  description = "Percentage of success to sample."
}

variable "lambda_failure_feedback_role_arn" {
  type        = string
  default     = ""
  description = "IAM role for failure feedback."
}

variable "sqs_success_feedback_role_arn" {
  type        = string
  default     = ""
  description = "The IAM role permitted to receive success feedback for this topic."
}

variable "sqs_success_feedback_sample_rate" {
  type        = number
  default     = 100
  description = "Percentage of success to sample."
}

variable "sqs_failure_feedback_role_arn" {
  type        = string
  default     = ""
  description = "IAM role for failure feedback."
}

variable "enable" {
  type        = bool
  default     = "true"
  description = "Boolean indicating whether or not to create sns module."
}