---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name: Terraform AWS cost billing alarm

# License of this project
license: "APACHE"

# Canonical GitHub repo
github_repo: clouddrove/terraform-aws-cost-billing-alarm

# Badges to display
badges:
  - name: "Latest Release"
    image: "https://img.shields.io/github/release/clouddrove/terraform-aws-cost-billing-alarm.svg"
    url: "https://github.com/clouddrove/terraform-aws-cost-billing-alarm/releases/latest"
  - name: "tfsec"
    image: "https://github.com/clouddrove/terraform-aws-cost-billing-alarm/actions/workflows/tfsec.yml/badge.svg"
    url: "https://github.com/clouddrove/terraform-aws-cost-billing-alarm/actions/workflows/tfsec.yml"
  - name: "Licence"
    image: "https://img.shields.io/badge/License-APACHE-blue.svg"
    url: "LICENSE.md"

prerequesties:
  - name: Terraform 1.5.6
    url: https://learn.hashicorp.com/terraform/getting-started/install.html

#  description of this project
# yamllint disable rule:line-length
description: |-
  Terraform module to create aws cost billing alarm resource on AWS with sns topic.

# extra content
include:
  - "terraform.md"

# How to use this project
# yamllint disable rule:line-length
usage: |-
  Here is examples of how you can use this module in your inventory structure:
  ### cloudwatch-billing-alert-to-new-sns-consolidated-acct
  ```hcl
    module "billing_cloudwatch_alert" {
      source                    = "clouddrove/terraform-aws-cost-billing-alarm/aws"
      name                      = "billing/aws"
      environment               = "test"
      monthly_billing_threshold = 10
      currency                  = "USD"
      subscribers = {
        sms = {
          protocol                        = "email"
          endpoint                        = "xxxxxxx@clouddrove.com"
          endpoint_auto_confirms          = false
          raw_message_delivery            = false
          filter_policy                   = ""
          delivery_policy                 = ""
          confirmation_timeout_in_minutes = "60"
        }
      }
    }
  ```

  ### cloudwatch-billing-alert-to-new-sns-with-acct-id
  ```hcl
    module "billing_cloudwatch_alert" {
      source                    = "clouddrove/terraform-aws-cost-billing-alarm/aws"
      name                      = "billing/aws"
      environment               = "test"
      aws_account_id            = 11111111111
      monthly_billing_threshold = 100
      currency                  = "USD"

      subscribers = {
        sms = {
          protocol                        = "email"
          endpoint                        = "xxxxxxxxclouddrove.com"
          endpoint_auto_confirms          = false
          raw_message_delivery            = false
          filter_policy                   = ""
          delivery_policy                 = ""
          confirmation_timeout_in_minutes = "60"
        }
      }
    }
  ```

  ### cloudwatch-billing-alert-to-pre-existing-sns-consolidated-acct
  ```hcl
    module "billing_cloudwatch_alert" {
      source                    = "clouddrove/terraform-aws-cost-billing-alarm/aws"
      name                      = "billing/aws"
      environment               = "test"
      monthly_billing_threshold = 500
      currency                  = "USD"
      #sns_topic_arns           = ["arn:aws:lambda:us-east-1:111111111111:function:bb-root-org-notify_slack"]
      subscribers = {
        sms = {
          protocol                        = "email"
          endpoint                        = "xxxxxclouddrove.com"
          endpoint_auto_confirms          = false
          raw_message_delivery            = false
          filter_policy                   = ""
          delivery_policy                 = ""
          confirmation_timeout_in_minutes = "60"
        }
      }
    }
  ```

  ### cloudwatch-billing-alert-to-pre-existing-sns-with-acct-id
  ```hcl
    module "billing_cloudwatch_alert" {
      source                    = "clouddrove/terraform-aws-cost-billing-alarm/aws"
      name                      = "billing/aws"
      environment               = "test"
      aws_account_id            = 111111111111
      monthly_billing_threshold = 500
      currency                  = "USD"
      #sns_topic_arns           = ["arn:aws:lambda:us-east-1:111111111111:function:bb-root-org-notify_slack"]

      subscribers = {
        sms = {
          protocol                        = "email"
          endpoint                        = "clouddrove.com"
          endpoint_auto_confirms          = false
          raw_message_delivery            = false
          filter_policy                   = ""
          delivery_policy                 = ""
          confirmation_timeout_in_minutes = "60"
        }
      }
    }
  ```
